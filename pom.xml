<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.paohe</groupId>
	<artifactId>czl_data_center</artifactId>
	<version>${czl.version}</version>
	<packaging>pom</packaging>
	<name>czl_data_center</name>
	<description>采芝林数据中心（基于spring cloud转发平台）</description>

	<!-- parent springboot version -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
	</parent>

	<repositories>
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://183.62.35.227:8081/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://183.62.35.227:8081/nexus/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<repository>
			<id>thirdparty</id>
			<url>http://183.62.35.227:8081/nexus/content/repositories/thirdparty/</url>
		</repository>
	</distributionManagement>

	<properties>
		<encoding.code>UTF-8</encoding.code>
		<project.build.sourceEncoding>${encoding.code}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding.code}</project.reporting.outputEncoding>
		<!-- jdk version -->
		<java.version>8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<czl.version>0.0.1</czl.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<spring-cloud-code.version>2.0.0.RELEASE</spring-cloud-code.version>
		<package.environment>dev</package.environment>
	</properties>

	<!-- 导入spring cloud版本 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>config_center</module>
		<module>register_center</module>
		<module>dync_gateway</module>
		<module>sync_center</module>
	</modules>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<package.environment>dev</package.environment>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<package.environment>test</package.environment>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<package.environment>prod</package.environment>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.xls</include>
					<include>**/*.xlsx</include>
					<include>**/*.png</include>
					<include>**/*.bpmn</include>
					<include>**/*.dtd</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.xsd</include>
				</includes>
				<excludes>
					<exclude>properties/*</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- 不同环境的配置文件选择 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 覆盖原有文件 -->
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>src/main/resources/properties/${package.environment}</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>